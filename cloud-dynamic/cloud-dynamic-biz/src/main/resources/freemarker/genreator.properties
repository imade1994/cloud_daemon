# ??
author = tj

# ??yaml ? ?????
jdbc.username = root
jdbc.password = Root123456
jdbc.url = jdbc:mysql://127.0.0.1:3306/test?characterEncoding=UTF-8&useUnicode=true&useSSL=false&tinyInt1isBit=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
jdbc.driver = com.mysql.cj.jdbc.Driver

# ???
parent = com.tj.cloud
# ??????????? ??????
AutoGeneratorPath = /AutoGeneratorCode

#??? ??
tablePrefix = t_

# ??????
parentEntity = com.tj.cloud.core.model.base.BaseEntity

# ??????
result = com.tj.cloud.core.model.base.ResultMsg

# ftl ???? ??resource ?
tamplates.controller = /freemarker/controller.java.ftl
tamplates.entity = /freemarker/entity.java.ftl
tamplates.xml = /freemarker/mapper.xml.ftl
tamplates.mapper = /freemarker/mapper.java.ftl
tamplates.service = /freemarker/service.java.ftl
tamplates.serviceImpl = /freemarker/serviceImpl.java.ftl

tamplates.application = /freemarker/AutoGeneratorCodeApplication.java.ftl
tamplates.pom = /freemarker/pom.xml.ftl

# 编译后生成jar包的位置  根据模板pom.xml文件中的名字和版本定义
classPath = /target/classes
#jarFile = /target/AutoGeneratorCode-1.0-SNAPSHOT.jar

# Maven路径，为方便开发设置了两个路径，首选第一个路径
mavenPath1 = /usr/local/maven
mavenPath2 = E:/taojun/develop-untils/maven/maven/apache-maven-3.5.2
javaHome1 = /opt/modules/jdk1.8.0_181
javaHome2 = C:/Program Files/Java/jdk1.8.0_66

# 是否开启持久化  true  false
isPersistent = true
# 持久化方式：File、GitLab
#   1、文件持久化；
#   2、GitLab持久化（条件是生产环境中项目启动时是从GitLab上拉取代码，同时需要提供相关GitLab账号信息）；
persistentMethod = File

# GitLab配置
gitlab.username = AutoGeneratorCode
gitlab.password = 123456
gitlab.http = http://127.0.0.1:8090/
# 要操作的  项目ID=用户名+"/"+项目名
#gitlab.project = AutoGeneratorCode/myproject
gitlab.project = HuQi/AutoGenerator
# 代码要上传到的文件夹目录，注：请设置MapperScanner的扫描目录下
gitlab.tree = /src/main/java/org/jeecg/generator/auto
# 设置分支
gitlab.branch = develop